CREATE OR REPLACE PROCEDURE USP_LOAD_MOVIES_DATA()
RETURNS BOOLEAN 
AS
BEGIN

    -- CHECK TABLES
    CREATE TABLE IF NOT EXISTS MANAGED_DB.MOVIES.RAW_MOVIES_CONTENT (
        RAW_CONTENT VARIANT 
    ,   FILE_NAME   VARCHAR(300)
    );

    CREATE TABLE IF NOT EXISTS MANAGED_DB.MOVIES.REJECTED_COPY_MOVIES(
         ID NUMBER    AUTOINCREMENT START 1 INCREMENT 1
    ,    ERROR        VARCHAR(300)
    ,    "FILE"       VARCHAR(100)
    ,    STATUS       VARCHAR(100)
    ,    "ROW_NUMBER" VARCHAR(10)
    ,    ERROR_TIME   DATETIME
    );
    
    -- LOAD DATA STATMENT 
    COPY INTO MANAGED_DB.MOVIES.RAW_MOVIES_CONTENT
    FROM
    (SELECT t.$1, METADATA$FILENAME FROM @FILE_FORMATS.ADLS_VITU144_STAGE_BRONZE AS  t)
        FILE_FORMAT = (FORMAT_NAME = FILE_FORMATS.JSON_FILE_FORMAT)
        PATTERN = '.*movies.*json'    
        ON_ERROR=SKIP_FILE;
        

    -- CHECK ERRORS UNDER THE COPY COMMAND
    -- DECLARE FINAL AWNSER
    DECLARE 
        VAR_LAST_QUERY_ID VARCHAR := LAST_QUERY_ID(); 
        RESP_BOOL BOOLEAN := TRUE;
        NOW TIMESTAMP := SYSDATE();
    BEGIN
    IF (NOT EXISTS (
        SELECT 
            1
        FROM TABLE(RESULT_SCAN(:VAR_LAST_QUERY_ID)) t 
        INNER JOIN MANAGED_DB.MOVIES.REJECTED_COPY_MOVIES rc 
            ON t.$1 = rc.file
        WHERE t.$6 > 0
    )) THEN 
        INSERT INTO MANAGED_DB.MOVIES.REJECTED_COPY_MOVIES (
              ERROR        
            , "FILE"   
            , STATUS
            , "ROW_NUMBER" 
            , ERROR_TIME   
        )
        SELECT 
             $7
        ,    $1
        ,    $2
        ,    $10
        ,    NOW
        FROM TABLE(RESULT_SCAN(:VAR_LAST_QUERY_ID))
        WHERE $6 > 0;
        RESP_BOOL := FALSE;
        END IF;
        RETURN :RESP_BOOL;
    END;
END;